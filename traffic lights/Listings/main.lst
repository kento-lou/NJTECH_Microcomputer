C51 COMPILER V9.59.0.0   MAIN                                                              06/13/2024 18:45:54 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          方案说明：
   3            1、LED部分：    LED1-3做第一组绿、黄、红灯，LED5-7做第二组绿、黄、红灯
   4            2、数码管部分： 数码管高二位对应一组，低二位对应第二组
   5                            第二组红灯时长等于第一组绿黄时长，2组黄灯时长相等，第二组绿灯时长等于第一组红灯时长减第二组黄灯时
             -长，灯计时用TIM0实现
   6            3、按键部分：   S4控制count和set模式，上电后默认在count模式，set模式下倒计时暂停，灯保持现状
   7                            在Set模式下按下S1第一组时间加1S，按下S2第一组时间减1，第二组的时间根据对应关系自动计算,自动保存。
             -在count模式下两个按键无效
   8          */
   9          /*----------include--------------*/
  10          #include <STC12C5A60S2.H>
  11          #include "TIM_set.h"//定时器设置文件
  12          #include "Delayms.h"//延时文件
  13          #include "IAP.h"//I2C文件
  14          /*----------define---------------*/
  15          #define green_time_iap_ADDRESS 0x0000 //绿灯时间eeprom地址  
  16          #define red_time_iap_ADDRESS 0x0200 //绿灯时间eeprom地址    
  17          /*----------variable---------------*/
  18          unsigned char green_time1;//第一组绿灯时间
  19          unsigned char yellow_time1=5;//第一组黄灯时间
  20          unsigned char red_time1;//第一组红灯时间
  21          unsigned char green_time2;//第二组绿灯时间
  22          unsigned char yellow_time2;//第二组黄灯时间
  23          unsigned char red_time2;//第二组红灯时间
  24          unsigned char count_t0=0;//记录进入t0中断次数
  25          unsigned char time_1;//第一组灯时间
  26          unsigned char time_2;//第二组灯时间
  27          unsigned char judge_flag_1=0;//0表示第一组进入绿灯，1表示进入黄灯，2表示进入红灯
  28          unsigned char judge_flag_2=2;//0表示第二组进入绿灯，1表示进入黄灯，2表示进入红灯
  29          unsigned int seg_time;//数码管显示
  30          unsigned char seg_num[4]={0,0,0,0};//数码管显示
  31          unsigned char code wei_num[4]={0xf7,0xfb,0xfd,0xfe};//位选码
  32          unsigned char code duan_num[10]={0xc0,0xf9,0xa4,0xb0,0x99,
  33                          0x92,0x82,0xf8,0x80,0x90};//段选码
  34          unsigned char state_flag=0;//状态标志位，0表示count状态，1表示set模式
  35          
  36          /*----------function--------------*/
  37          void Timer0_Init(void);
  38          void time_compute();//倒计时计算函数
  39          void led_judge_1();//处理第一组灯的倒计时和状态转换函数
  40          void led_judge_2();//处理第二组灯的倒计时和状态转换函数
  41          void seg_translation();//译码函数
  42          void seg();//数码管动态扫描函数
  43          unsigned char key_scan();//按键扫描函数
  44          void key_compute_save();//时间加减函数
  45          void save();//时间写入EEPROM函数    
  46          void read();  
  47          void time2_compuate();                          
  48          /*---------------------------------*/
  49          void main()
  50          {
  51   1        /*iap_ERASE(green_time_iap_ADDRESS);//擦除扇区
  52   1        iap_PROGRAM(green_time_iap_ADDRESS,25);//写东西
C51 COMPILER V9.59.0.0   MAIN                                                              06/13/2024 18:45:54 PAGE 2   

  53   1        iap_ERASE(red_time_iap_ADDRESS);//擦除扇区
  54   1        iap_PROGRAM(red_time_iap_ADDRESS,30);//写东西*/
  55   1        green_time1=iap_READ(green_time_iap_ADDRESS);
  56   1        red_time1=iap_READ(red_time_iap_ADDRESS);
  57   1        judge_flag_1=0;
  58   1        time_compute();
  59   1        time_1=green_time1;
  60   1        time_2=red_time2;
  61   1        EA=1;
  62   1        EX0=1;
  63   1        IT0=1;
  64   1        Timer0_Init();
  65   1        P1=0xBE;
  66   1        while(1)
  67   1        {
  68   2          if(!state_flag)
  69   2          {//count模式
  70   3            time_compute();
  71   3            if(!time_1) led_judge_1();
  72   3            if(!time_2) led_judge_2();
  73   3            seg();
  74   3          }
  75   2          else
  76   2          {//set模式
  77   3            key_compute_save();
  78   3            seg();
  79   3          }
  80   2        }
  81   1      }
  82          void int0() interrupt 0
  83          {
  84   1        Delayms(10);
  85   1        if(++state_flag==2) state_flag=0;
  86   1        switch(state_flag)
  87   1        {
  88   2          case 0:
  89   2          {
  90   3            TR0=1;//count模式下重新开始计时
  91   3          }break;
  92   2          case 1:
  93   2          {
  94   3            TR0=0;//set模式下暂停计时
  95   3          }break;
  96   2        }
  97   1      }
  98          void Timer0_Isr(void) interrupt 1//此定时器同时计时两组灯
  99          {
 100   1        TL0 = 0x00;       
 101   1        TH0 = 0x4C;
 102   1        if(++count_t0==20)
 103   1        {//1S
 104   2          count_t0=0;
 105   2          if(time_1) time_1--;
 106   2          if(time_2) time_2--;
 107   2        }
 108   1        if((judge_flag_1==1)&&((count_t0%2)==0)) P1=P1^0x02;
 109   1        if((judge_flag_2==1)&&((count_t0%2)==0)) P1=P1^0x20;
 110   1      }
 111          
 112          void time_compute()
 113          {
 114   1        yellow_time2=yellow_time1;
C51 COMPILER V9.59.0.0   MAIN                                                              06/13/2024 18:45:54 PAGE 3   

 115   1        green_time2=red_time1-yellow_time2;
 116   1        red_time2=green_time1+yellow_time1;
 117   1      }
 118          void led_judge_1()
 119          {
 120   1        unsigned char temp=0;
 121   1          if(++judge_flag_1==3)
 122   1            judge_flag_1=0;
 123   1        switch(judge_flag_1)
 124   1        {
 125   2          case 0:
 126   2          {
 127   3            temp=P1&0xF0;//xxxx 0000
 128   3            time_1=green_time1;
 129   3            P1=temp|0x0E;//xxxx 1110
 130   3          }break;
 131   2          case 1:
 132   2          {
 133   3            temp=P1&0xF0;//xxxx 0000
 134   3            time_1=yellow_time1;
 135   3            P1=temp|0x0D;//xxxx 1101
 136   3          }break;
 137   2          case 2:
 138   2          {
 139   3            temp=P1&0xF0;//xxxx 0000
 140   3            time_1=red_time1;
 141   3            P1=temp|0x0B;//xxxx 1011
 142   3          }break;
 143   2        }
 144   1      }
 145          void led_judge_2()
 146          {
 147   1        
 148   1        unsigned char temp=0;
 149   1          if(++judge_flag_2==3)
 150   1            judge_flag_2=0;
 151   1        switch(judge_flag_2)
 152   1        {
 153   2          case 0:
 154   2          {
 155   3            temp=P1&0x0F;//0000 xxxx 
 156   3            time_2=green_time2;
 157   3            P1=temp|0xE0;//1110 xxxx
 158   3          }break;
 159   2          case 1:
 160   2          {
 161   3            temp=P1&0x0F;//0000 xxxx
 162   3            time_2=yellow_time2;
 163   3            P1=temp|0xD0;//1101 xxxx
 164   3          }break;
 165   2          case 2:
 166   2          {
 167   3            temp=P1&0x0F;//0000 xxxx 
 168   3            time_2=red_time2;
 169   3            P1=temp|0xB0;//1011 xxxx 
 170   3          }break;
 171   2        }
 172   1      
 173   1      }
 174          void seg_translation()
 175          {
 176   1        seg_num[0]=seg_time%10;
C51 COMPILER V9.59.0.0   MAIN                                                              06/13/2024 18:45:54 PAGE 4   

 177   1        seg_num[1]=seg_time/10%10;
 178   1        seg_num[2]=seg_time/100%10;
 179   1        seg_num[3]=seg_time/1000%10;
 180   1      }
 181          void seg()
 182          {
 183   1        unsigned char i;
 184   1        seg_time=time_1*100+time_2;
 185   1        seg_translation();
 186   1        for(i=0;i<4;i++)
 187   1        {
 188   2          P0=duan_num[seg_num[i]];
 189   2          P2=wei_num[i];
 190   2          Delayms(2);
 191   2        }
 192   1      }
 193          unsigned char key_scan()
 194          {
 195   1        static kp=0;
 196   1        if(P3!=0xFF)
 197   1        {
 198   2          Delayms(10);
 199   2          if((P3!=0xFF)&&(kp==0))
 200   2          {
 201   3            kp=1;
 202   3            if(P3==0xDF) return 1;
 203   3            if(P3==0xEF) return 2;
 204   3          }
 205   2        }
 206   1        else kp=0;
 207   1        return 0;
 208   1      }
 209          void key_compute_save()
 210          {
 211   1        unsigned char key_val;
 212   1        key_val=key_scan();
 213   1        switch(key_val)
 214   1        {
 215   2          case 1:
 216   2          {
 217   3            if(time_1++<99);
 218   3            save();
 219   3            read();
 220   3            time_compute();
 221   3            time2_compuate(); 
 222   3          }break;
 223   2          case 2:
 224   2          {
 225   3            if(time_1-->5);
 226   3            save();
 227   3            read();
 228   3            time_compute();
 229   3            time2_compuate(); 
 230   3          }break;
 231   2        }
 232   1      }
 233          void save()
 234          {
 235   1        switch(judge_flag_1)
 236   1        {
 237   2          case 0:
 238   2          {
C51 COMPILER V9.59.0.0   MAIN                                                              06/13/2024 18:45:54 PAGE 5   

 239   3            iap_ERASE(green_time_iap_ADDRESS);//擦除扇区
 240   3            iap_PROGRAM(green_time_iap_ADDRESS,time_1);//写东西
 241   3          }break;
 242   2          case 2:
 243   2          {
 244   3            iap_ERASE(red_time_iap_ADDRESS);//擦除扇区
 245   3            iap_PROGRAM(red_time_iap_ADDRESS,time_1);//写东西
 246   3          }break;
 247   2        }
 248   1      }
 249          void read()
 250          {
 251   1        green_time1=iap_READ(green_time_iap_ADDRESS);
 252   1        red_time1=iap_READ(red_time_iap_ADDRESS);
 253   1      }
 254          void time2_compuate()
 255          {
 256   1        switch(judge_flag_2)
 257   1        {
 258   2          case 0:
 259   2          {
 260   3            time_2=green_time2;
 261   3          }break;
 262   2          case 2:
 263   2          {
 264   3            time_2=red_time2;
 265   3          }break;
 266   2        }
 267   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    663    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
