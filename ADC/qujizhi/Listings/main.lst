C51 COMPILER V9.59.0.0   MAIN                                                              05/27/2024 15:34:32 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //去极值法
   2          #include <STC12C5A60S2.H>
   3          #include "intrins.h"
   4          #define uchar unsigned char
   5          #define uint  unsigned int
   6          #define N 12
   7          uint voltage_buf[N];//缓冲区
   8          uint dis_voltage;//数码管显示电压
   9          uchar code num_disp_L[]={0xc0,0xf9,0xa4,0xb0,0x99,
  10                                   0x92,0x82,0xf8,0x80,0x90};//无小数点，与上0x7F加小数点
  11          uchar num[4]={0,0,0,0};
  12          uchar code wei[4]={0xf7,0xfb,0xfd,0xfe};//位选
  13          void Delayms(int ms);
  14          void ADC_init();
  15          float ADC_Value(uchar Channel);
  16          uint ADC_Get(uchar Channel);
  17          void dis_choose();
  18          void main()
  19          {
  20   1        uchar i;
  21   1        ADC_init();
  22   1        while(1)
  23   1        {
  24   2            dis_voltage=ADC_Value(0)*1000;
  25   2            dis_choose();
  26   2            for(i=0;i<4;i++)
  27   2            {//数码管动态显示,最高位有小数点
  28   3              if(i==3)//最高位加小数点
  29   3                P0=num_disp_L[num[i]]&0x7F;
  30   3              else
  31   3                P0=num_disp_L[num[i]];
  32   3              P2=wei[i];
  33   3              Delayms(2);
  34   3            } 
  35   2        }
  36   1      }
  37          void Delayms(int ms)    //@11.0592MHz
  38          {
  39   1        unsigned char data i, j;
  40   1        while(ms--)
  41   1        {
  42   2          i = 11;
  43   2          j = 190;
  44   2          do
  45   2          {
  46   3            while (--j);
  47   3          } while (--i);
  48   2        }
  49   1      }
  50          void ADC_init()
  51          {
  52   1        ADC_RES=0;
  53   1        ADC_RESL=0;
  54   1        P1ASF=0x01;//P10作模拟输入
C51 COMPILER V9.59.0.0   MAIN                                                              05/27/2024 15:34:32 PAGE 2   

  55   1        AUXR1=0x00;//ADRJ=0,高8位存ADC_RES,低2位ADC_RESL低2位
  56   1        ADC_CONTR=0x80;//打开ADC电源
  57   1        Delayms(2);
  58   1      }
  59          
  60          float ADC_Value(uchar Channel)
  61          {
  62   1        uchar i,j,k,temp;
  63   1        float AD_Value=0;
  64   1        for(i=0;i<N;i++)
  65   1        {
  66   2          voltage_buf[i]=ADC_Get(Channel);
  67   2        }
  68   1        for(j=0;j<N-1;j++)
  69   1        {
  70   2          for(k=0;k<N-j-1;k++)
  71   2          {
  72   3            if(voltage_buf[k]>voltage_buf[k+1])
  73   3            {
  74   4              temp=voltage_buf[k];
  75   4              voltage_buf[k]=voltage_buf[k+1];
  76   4              voltage_buf[k+1]=temp;
  77   4            }
  78   3          }
  79   2        }
  80   1        for(i=1;i<N-1;i++)
  81   1          AD_Value+=voltage_buf[i];
  82   1        AD_Value=(AD_Value*5.11)/1024.0/(N-2);
  83   1        return AD_Value;
  84   1      }
  85          
  86          uint ADC_Get(uchar Channel)
  87          {
  88   1        ADC_CONTR=0x88|Channel;//打开ADC电源,启动ADC,选择P10作模拟输入通道
  89   1        _nop_(); _nop_(); _nop_(); _nop_();
  90   1        while(!(ADC_CONTR&0x10));    //等待转换完成
  91   1        ADC_CONTR&=0xe7;      //关闭AD转换，ADC_FLAG清0
  92   1        return(ADC_RES*4+ADC_RESL);   //返回AD转换完成的10位数据
  93   1      }
  94          
  95          void dis_choose()
  96          {
  97   1        num[0]=dis_voltage%10;
  98   1        num[1]=dis_voltage/10%10;
  99   1        num[2]=dis_voltage/100%10;
 100   1        num[3]=dis_voltage/1000%10;
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    504    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
