C51 COMPILER V9.59.0.0   MAIN                                                              06/10/2024 17:49:54 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //帧头为0XFA,0XAF,结束符为0xA0,0X0A
   2          #include <STC12C5A60S2.H>
   3          #include <stdio.h>
   4          #include <string.h>
   5          #define uchar unsigned char
   6          #define uint unsigned int  
   7          uchar rec[50];//发送缓冲区
   8          uchar sen[50];//接收缓冲区
   9          uchar rec_flag;//rec_flag=0时表示还未对起始帧进行判断删改
  10          uchar end;//end=1表示接收完成 
  11          uint add_check;//累加和检查变量
  12          uchar rec_length;
  13          uchar *send_Pt;
  14          uchar send_length;
  15          void UART_Send_Int(uchar *pt,uchar len);//发送函数
  16          void judge();//判断接受数据函数
  17          void main()
  18          {
  19   1        TMOD=0x20;
  20   1        TH1=232;TL1=232;//波特率1200
  21   1        SCON=0x50;
  22   1        PCON=0x00;
  23   1        TR1=1;EA=1;ES=1;//打开中断
  24   1        P1=0xff;
  25   1        while(1)
  26   1        {
  27   2          if(end)
  28   2          {//接收缓冲区配置完成
  29   3            judge();
  30   3            end=0;
  31   3          }
  32   2        }
  33   1      }
  34          void uart() interrupt 4
  35          {
  36   1        static uchar count;//存储接受数据的位
  37   1        if(RI==1)//接收
  38   1        {
  39   2          RI=0;
  40   2          rec[count++]=SBUF;
  41   2          if((rec[count-1]==0xAF)&&(rec_flag==0))//起始帧不是0xFA，0xAF
  42   2          {
  43   3            if(rec[count-2]==0xFA)
  44   3            {
  45   4              memset(rec,0,sizeof rec);//将接收缓冲区全部清0
  46   4              rec[0]=0xFA;
  47   4              rec[1]=0xAF;
  48   4              count=2;
  49   4              rec_flag=1;
  50   4            }
  51   3            else
  52   3            {
  53   4              memset(rec,0,sizeof rec);//将接收缓冲区全部清0
  54   4              count=0;
C51 COMPILER V9.59.0.0   MAIN                                                              06/10/2024 17:49:54 PAGE 2   

  55   4            }
  56   3          }
  57   2          else if(count>50)   count=0;//防止出现都是无效数据
  58   2          if((rec[count-1]==0x0A)&&(rec[count-2]==0xA0))
  59   2          {//结束符判断
  60   3            end=1;
  61   3            rec_length=count;
  62   3            count=0;rec_flag=0;
  63   3          }
  64   2        }
  65   1        if(TI==1)//发送
  66   1        {
  67   2          TI=0;
  68   2          if(send_length>0) 
  69   2          {    
  70   3            SBUF=*send_Pt++;
  71   3            send_length--;
  72   3          }
  73   2        }
  74   1      }
  75          void UART_Send_Int(uchar *pt,uchar len)
  76          {
  77   1        send_Pt=pt;
  78   1        send_length=len;
  79   1        send_length--;
  80   1        SBUF=*send_Pt++;  
  81   1      }
  82          void judge()
  83          {
  84   1        uchar i;
  85   1        add_check=0;//检查变量清除上一次的数据
  86   1        for(i=0;i<=(rec_length-4);i++)
  87   1          add_check+=rec[i];
  88   1        if((uchar)(add_check&0x00ff)!=rec[rec_length-3])
  89   1        {//检查校验是否正确
  90   2            strcpy(sen,"jiaoyan wrong\r\n");
  91   2            UART_Send_Int(sen,20);
  92   2        }
  93   1        else if((rec_length-6)!=rec[2])
  94   1        {//检查长度是否正确
  95   2          strcpy(sen,"changdu wrong\r\n");
  96   2          UART_Send_Int(sen,20);
  97   2        }
  98   1        else 
  99   1        {
 100   2          P1=~rec[3];
 101   2          strcpy(sen,"right!!      \r\n");
 102   2          UART_Send_Int(sen,20);
 103   2          end=0;
 104   2        }
 105   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    407    ----
   CONSTANT SIZE    =     48    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    110    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.59.0.0   MAIN                                                              06/10/2024 17:49:54 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
